extends CharacterBody2D

@export var move_radius := 100.0       # –†–∞–¥–∏—É—Å –≥—É–ª—è–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
@export var speed := 100.0             # –°–∫–æ—Ä–æ—Å—Ç—å
@export var egg_interval := 5.0        # –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É —è–π—Ü–∞–º–∏
@export var max_eggs_nearby := 20      # –ú–∞–∫—Å —è–∏—Ü –≤ –∑–æ–Ω–µ –¥–æ –ø–∞—É–∑—ã
@export var egg_check_radius := 128.0  # –†–∞–¥–∏—É—Å –ø–æ–∏—Å–∫–∞ —è–∏—Ü
@export var item_scene := preload("res://scenes/items/Item.tscn")

# --- –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ ---
@export var waypoints: Array[Vector2] = []  # –¢–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞
@export var eggs_per_point: int = 5        # –Ø–∏—Ü –¥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç–æ—á–∫–µ

var home_position: Vector2
var target_position: Vector2

var current_wp: int = 0      # –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π —Ç–æ—á–∫–∏ –ø—É—Ç–∏
var eggs_laid: int = 0       # –°–∫–æ–ª—å–∫–æ —è–∏—Ü —É–∂–µ —Å–Ω–µ—Å–ª–∏ –Ω–∞ —ç—Ç–æ–π —Ç–æ—á–∫–µ

@onready var egg_timer := $EggTimer
@onready var items_container := get_tree().get_current_scene().get_node("Items")

func _ready():
	home_position = global_position
	pick_new_target()
	
		# 1) –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª _–¥–æ_ —Å—Ç–∞—Ä—Ç–∞ —Ç–∞–π–º–µ—Ä–∞
	egg_timer.connect("timeout", Callable(self, "_on_egg_timer_timeout"))
	# 2) –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
	egg_timer.wait_time = egg_interval
	egg_timer.one_shot = false
	egg_timer.start()      # –≤–æ—Ç –∑–¥–µ—Å—å —Ç–æ—á–Ω–æ —Å—Ç–∞—Ä—Ç—É–µ–º —É–∂–µ —Å –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–º –æ–±—Ä–∞—Ç–Ω—ã–º –≤—ã–∑–æ–≤–æ–º



func _process(delta):
	# –î–≤–∏–∂–µ–Ω–∏–µ –∫ —Å–ª—É—á–∞–π–Ω–æ–π —Ü–µ–ª–∏ –≤–Ω—É—Ç—Ä–∏ –∫—Ä—É–≥–∞ –≤–æ–∫—Ä—É–≥ home_position
	var dir = (target_position - global_position).normalized()
	velocity = dir * speed
	move_and_slide()

	# –ö–æ–≥–¥–∞ –¥–æ—à–ª–∏ –¥–æ target_position, –≤—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—É—é
	if global_position.distance_to(target_position) < 10:
		pick_new_target()

func pick_new_target():
	# –†–∞–Ω–¥–æ–º–∏–º —Å–ª–µ–¥—É—é—â—É—é —Ç–æ—á–∫—É –≤–Ω—É—Ç—Ä–∏ –∫—Ä—É–≥–∞ move_radius –æ—Ç home_position
	var angle = randf() * TAU
	var radius = randf_range(0, move_radius)
	var offset = Vector2(cos(angle), sin(angle)) * radius
	target_position = home_position + offset

func _on_egg_timer_timeout() -> void:
	print("üê£ <timeout> on ", name, "@", global_position)
	if global_position.distance_to(home_position) > 20:
		print("    ‚Üí –µ—â—ë –≤ –ø—É—Ç–∏, –¥–æ –¥–æ–º–∞:", global_position.distance_to(home_position))
		return

	# –°—á–∏—Ç–∞–µ–º —è–π—Ü–∞ –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏
	var nearby := 0
	var items_container = get_tree().root.get_node("Main/Items")
	for child in items_container.get_children():
		if child is Item and child.item_name == "egg":
			if child.global_position.distance_to(global_position) <= egg_check_radius:
				nearby += 1

	if nearby >= max_eggs_nearby:
		# –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —è–∏—Ü ‚Äî –∂–¥–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç–∞–π–º–∞—É—Ç–∞
		return

	# –°–ø–∞–≤–Ω–∏–º —è–π—Ü–æ
	var egg = item_scene.instantiate()
	egg.item_name = "egg"
	egg.global_position = global_position
	items_container.add_child(egg)

	eggs_laid += 1
	print("–ö—É—Ä–∏—Ü–∞ #", name, "—Å–Ω–µ—Å–ª–∞ —è–π—Ü–æ:", eggs_laid, "/", eggs_per_point)

	# –î–æ—Å—Ç–∏–≥–ª–∏ –Ω–æ—Ä–º—ã ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π —Ç–æ—á–∫–µ –º–∞—Ä—à—Ä—É—Ç–∞
	if eggs_laid >= eggs_per_point:
		advance_waypoint()

func advance_waypoint() -> void:
	eggs_laid = 0
	if waypoints.size() == 0:
		return

	# –•–∏—Ç—Ä–æ—Å—Ç—å: –∏–¥–µ–º –ø–æ –∫—Ä—É–≥—É
	current_wp = (current_wp + 1) % waypoints.size()
	home_position = waypoints[current_wp]
	pick_new_target()
	print("–ö—É—Ä–∏—Ü–∞ #", name, "‚Üí –Ω–æ–≤–∞—è —Ç–æ—á–∫–∞ #", current_wp, ":", home_position)
